@model _3TLMiniSoccer.ViewModels.CategoryListViewModel
@{
    ViewData["Title"] = "Quản lý thể loại";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="flex-1 overflow-y-auto p-6 bg-gray-50">
    <!-- Header -->
    <div class="mb-6">
        <h1 class="text-2xl font-bold text-gray-800">Quản lý thể loại</h1>
    </div>

    <!-- Summary Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-blue-100 text-blue-500">
                    <i data-lucide="layers" class="w-6 h-6"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-500">Tổng số thể loại</p>
                    <p class="text-2xl font-bold">@Model.Stats.TotalCategories</p>
                    <p class="text-xs text-gray-400">Tất cả</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-green-100 text-green-500">
                    <i data-lucide="box" class="w-6 h-6"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-500">Thể loại sản phẩm</p>
                    <p class="text-2xl font-bold">@Model.Stats.ProductCategories</p>
                    <p class="text-xs text-gray-400">Sản phẩm</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-purple-100 text-purple-500">
                    <i data-lucide="map-pin" class="w-6 h-6"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-500">Thể loại sân</p>
                    <p class="text-2xl font-bold">@Model.Stats.FieldCategories</p>
                    <p class="text-xs text-gray-400">Sân bóng</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Tab Navigation -->
    <div class="bg-white rounded-lg shadow mb-6">
        <div class="border-b border-gray-200">
            <nav class="-mb-px flex space-x-8 px-6" aria-label="Tabs">
                <button onclick="switchTab('product')" id="product-tab" class="tab-button active border-green-500 text-green-600 py-4 px-1 border-b-2 font-medium text-sm">
                    <span class="flex items-center">
                        <i data-lucide="box" class="w-4 h-4 mr-2"></i>
                        Thể loại sản phẩm
                    </span>
                </button>
                <button onclick="switchTab('field')" id="field-tab" class="tab-button border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 py-4 px-1 border-b-2 font-medium text-sm">
                    <span class="flex items-center">
                        <i data-lucide="map-pin" class="w-4 h-4 mr-2"></i>
                        Thể loại sân
                    </span>
                </button>
            </nav>
        </div>
    </div>

    <!-- Product Categories Tab -->
    <div id="product-content" class="tab-content">
        <div class="bg-white rounded-lg shadow mb-6">
            <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                <div>
                    <h2 class="text-lg font-medium text-gray-900">Danh sách thể loại sản phẩm</h2>
                    <p class="text-sm text-gray-500 mt-1">Quản lý các thể loại sản phẩm trong hệ thống</p>
                </div>
                <button onclick="openAddProductCategoryModal()" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none">
                    <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
                    Thêm thể loại
                </button>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">#</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">TÊN THỂ LOẠI</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">MÔ TẢ</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">SỐ SẢN PHẨM</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">TRẠNG THÁI</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">THAO TÁC</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @if (Model.ProductCategories != null && Model.ProductCategories.Any())
                        {
                            @for (int i = 0; i < Model.ProductCategories.Count; i++)
                            {
                                var category = Model.ProductCategories[i];
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@(i + 1)</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@category.CategoryName</td>
                                    <td class="px-6 py-4 text-sm text-gray-500">@(category.Description ?? "-")</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@category.ProductCount</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @category.StatusClass">
                                            @category.StatusText
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <div class="flex space-x-2">
                                            <button class="text-red-600 hover:text-red-900" onclick="deleteProductType('@category.CategoryName')">
                                                <i data-lucide="trash-2" class="w-4 h-4"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">
                                    Không có thể loại sản phẩm nào
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Field Categories Tab -->
    <div id="field-content" class="tab-content hidden">
        <div class="bg-white rounded-lg shadow mb-6">
            <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                <h2 class="text-lg font-medium text-gray-900">Danh sách thể loại sân</h2>
                <button class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2" onclick="openAddFieldTypeModal()">
                    <i data-lucide="plus" class="w-4 h-4"></i>
                    <span>+ Thêm thể loại</span>
                </button>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">#</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">TÊN THỂ LOẠI</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">MÔ TẢ</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">SỐ NGƯỜI CHƠI</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">SỐ SÂN</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">GIÁ</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">TRẠNG THÁI</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">THAO TÁC</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @if (Model.FieldCategories != null && Model.FieldCategories.Any())
                        {
                            @for (int i = 0; i < Model.FieldCategories.Count; i++)
                            {
                                var category = Model.FieldCategories[i];
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@(i + 1)</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@category.TypeName</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@(category.Description ?? category.TypeName)</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@category.PlayerCount</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@category.FieldCount</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@(category.BasePrice.ToString("N0") + " VNĐ")</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @category.StatusClass">
                                            @category.StatusText
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <div class="flex space-x-2">
                                            <button class="text-blue-600 hover:text-blue-900" onclick="editFieldType(@category.FieldTypeId)">
                                                <i data-lucide="edit" class="w-4 h-4"></i>
                                            </button>
                                            <button class="text-red-600 hover:text-red-900" onclick="deleteFieldType(@category.FieldTypeId)">
                                                <i data-lucide="trash-2" class="w-4 h-4"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">
                                    Không có thể loại sân nào
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Product Category Modal -->
<div id="productCategoryModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900">Thêm thể loại sản phẩm mới</h3>
                <button onclick="closeProductCategoryModal()" class="text-gray-400 hover:text-gray-600">
                    <i data-lucide="x" class="w-6 h-6"></i>
                </button>
            </div>
            
            <form id="productCategoryForm" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Tên thể loại sản phẩm *</label>
                    <input type="text" id="productCategoryName" name="categoryName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="VD: Nước giải khát">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Mô tả</label>
                    <textarea id="productCategoryDescription" name="description" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="Mô tả chi tiết về thể loại sản phẩm..."></textarea>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Trạng thái *</label>
                    <select id="productCategoryStatus" name="isActive" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500">
                        <option value="true">Kích hoạt</option>
                        <option value="false">Chưa kích hoạt</option>
                    </select>
                </div>
                
                <div class="flex justify-end space-x-3 pt-4">
                    <button type="button" onclick="closeProductCategoryModal()" class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">
                        Hủy
                    </button>
                    <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">
                        Lưu thể loại sản phẩm
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add/Edit Field Type Modal -->
<div id="fieldTypeModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900" id="fieldModalTitle">Thêm thể loại sân mới</h3>
                <button onclick="closeFieldTypeModal()" class="text-gray-400 hover:text-gray-600">
                    <i data-lucide="x" class="w-6 h-6"></i>
                </button>
            </div>
            
            <form id="fieldTypeForm" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Tên thể loại sân *</label>
                    <input type="text" id="fieldTypeName" name="fieldTypeName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="VD: Bóng đá 5 người">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Mô tả</label>
                    <textarea id="fieldTypeDescription" name="fieldTypeDescription" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="Mô tả chi tiết về thể loại sân..."></textarea>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Số người chơi *</label>
                    <input type="number" id="fieldTypePlayerCount" name="fieldTypePlayerCount" required min="1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="VD: 10">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Giá cơ bản (VNĐ) *</label>
                    <input type="number" id="fieldTypeBasePrice" name="fieldTypeBasePrice" required min="0" step="1000" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="VD: 100000">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Trạng thái</label>
                    <select id="fieldTypeStatus" name="fieldTypeStatus" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500">
                        <option value="true">Hoạt động</option>
                        <option value="false">Không hoạt động</option>
                    </select>
                </div>
                
                <div class="flex justify-end space-x-3 pt-4">
                    <button type="button" onclick="closeFieldTypeModal()" class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">
                        Hủy
                    </button>
                    <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">
                        Lưu thể loại sân
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize Lucide icons
        lucide.createIcons();
        
        // Tab switching functionality
        function switchTab(tabName) {
            // Hide all tab contents
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.add('hidden');
            });
            
            // Remove active class from all tabs
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('active', 'border-green-500', 'text-green-600');
                button.classList.add('border-transparent', 'text-gray-500');
            });
            
            // Show selected tab content
            document.getElementById(tabName + '-content').classList.remove('hidden');
            
            // Add active class to selected tab
            const activeTab = document.getElementById(tabName + '-tab');
            activeTab.classList.add('active', 'border-green-500', 'text-green-600');
            activeTab.classList.remove('border-transparent', 'text-gray-500');
        }
        
        // Product Category Functions
        function openAddProductCategoryModal() {
            document.getElementById('productCategoryForm').reset();
            document.getElementById('productCategoryModal').classList.remove('hidden');
        }

        function closeProductCategoryModal() {
            document.getElementById('productCategoryModal').classList.add('hidden');
        }

        // Handle product category form submission
        document.getElementById('productCategoryForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const categoryName = document.getElementById('productCategoryName').value.trim();
            const description = document.getElementById('productCategoryDescription').value.trim();
            const isActive = document.getElementById('productCategoryStatus').value === 'true';
            
            if (!categoryName) {
                alert('Vui lòng nhập tên thể loại sản phẩm!');
                return;
            }
            
            // Call create API
            fetch('/Admin/CreateProductCategory', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    categoryName: categoryName,
                    description: description || null,
                    isActive: isActive
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    closeProductCategoryModal();
                    location.reload();
                } else {
                    alert('Lỗi: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi thêm thể loại sản phẩm!');
            });
        });

        function deleteProductType(categoryName) {
            if (confirm('Bạn có chắc chắn muốn xóa thể loại sản phẩm này?\n\nCảnh báo: Tất cả sản phẩm thuộc thể loại này sẽ KHÔNG có thể loại!')) {
                // Call delete API
                fetch(`/Admin/DeleteProductCategory?categoryName=${encodeURIComponent(categoryName)}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert('Lỗi: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi xóa thể loại sản phẩm!');
                });
            }
        }

        // Field Type Modal Functions
        function openAddFieldTypeModal() {
            document.getElementById('fieldModalTitle').textContent = 'Thêm thể loại sân mới';
            document.getElementById('fieldTypeModal').classList.remove('hidden');
        }

        function editFieldType(id) {
            document.getElementById('fieldModalTitle').textContent = 'Chỉnh sửa thể loại sân';
            document.getElementById('fieldTypeModal').classList.remove('hidden');
            // Load field type data here
            console.log('Edit field type:', id);
        }

        function deleteFieldType(id) {
            if (confirm('Bạn có chắc chắn muốn xóa thể loại sân này?\n\nLưu ý: Không thể xóa thể loại sân đã có sân bóng hoặc quy tắc giá.')) {
                // Show loading state
                const deleteButton = event.target;
                const originalText = deleteButton.textContent;
                deleteButton.textContent = 'Đang xóa...';
                deleteButton.disabled = true;
                
                // Call delete API
                fetch(`/Admin/DeleteFieldCategory/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        // Reload the page to show updated data
                        location.reload();
                    } else {
                        alert('Lỗi: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi xóa thể loại sân!');
                })
                .finally(() => {
                    // Reset button state
                    deleteButton.textContent = originalText;
                    deleteButton.disabled = false;
                });
            }
        }

        function closeFieldTypeModal() {
            document.getElementById('fieldTypeModal').classList.add('hidden');
            document.getElementById('fieldTypeForm').reset();
        }

        // Handle field type form submission
        document.getElementById('fieldTypeForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const typeName = formData.get('fieldTypeName')?.toString().trim();
            const description = formData.get('fieldTypeDescription')?.toString().trim();
            const playerCount = parseInt(formData.get('fieldTypePlayerCount'));
            const basePrice = parseFloat(formData.get('fieldTypeBasePrice'));
            const isActive = formData.get('fieldTypeStatus') === 'true';
            
            // Client-side validation
            if (!typeName || typeName.length === 0) {
                alert('Vui lòng nhập tên thể loại sân!');
                return;
            }
            
            if (typeName.length > 50) {
                alert('Tên thể loại sân không được vượt quá 50 ký tự!');
                return;
            }
            
            if (description && description.length > 200) {
                alert('Mô tả không được vượt quá 200 ký tự!');
                return;
            }
            
            if (isNaN(playerCount) || playerCount < 1 || playerCount > 50) {
                alert('Số người chơi phải từ 1 đến 50!');
                return;
            }
            
            if (isNaN(basePrice) || basePrice < 0 || basePrice > 10000000) {
                alert('Giá cơ bản phải từ 0 đến 10,000,000 VNĐ!');
                return;
            }
            
            const fieldTypeData = {
                typeName: typeName,
                description: description || null,
                playerCount: playerCount,
                basePrice: basePrice,
                isActive: isActive
            };
            
            console.log('Field type data:', fieldTypeData);
            
            // Show loading state
            const submitButton = this.querySelector('button[type="submit"]');
            const originalText = submitButton.textContent;
            submitButton.textContent = 'Đang lưu...';
            submitButton.disabled = true;
            
            // Send data to server
            fetch('/Admin/CreateFieldCategory', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(fieldTypeData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    closeFieldTypeModal();
                    // Reload the page to show updated data
                    location.reload();
                } else {
                    alert('Lỗi: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi lưu thể loại sân!');
            })
            .finally(() => {
                // Reset button state
                submitButton.textContent = originalText;
                submitButton.disabled = false;
            });
        });

    </script>
}