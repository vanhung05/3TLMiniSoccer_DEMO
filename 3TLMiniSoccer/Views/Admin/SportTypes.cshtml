@model IEnumerable<_3TLMiniSoccer.Models.ProductType>
@{
    ViewData["Title"] = "Quản lý thể loại";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="flex-1 overflow-y-auto p-6 bg-gray-50">
    <!-- Header Actions -->
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800">Quản lý thể loại</h1>
        <div class="flex space-x-2">
            <button class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center space-x-2" onclick="openAddSportTypeModal()">
                <i data-lucide="plus" class="w-4 h-4"></i>
                <span>Thêm thể loại</span>
            </button>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-blue-100 text-blue-500">
                    <i data-lucide="flag" class="w-6 h-6"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-500">Tổng thể loại</p>
                    <p class="text-2xl font-bold">@(Model?.Count() ?? 0)</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-green-100 text-green-500">
                    <i data-lucide="check-circle" class="w-6 h-6"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-500">Đang hoạt động</p>
                    <p class="text-2xl font-bold">@(Model?.Count(x => x.IsActive) ?? 0)</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="p-3 rounded-full bg-red-100 text-red-500">
                    <i data-lucide="x-circle" class="w-6 h-6"></i>
                </div>
                <div class="ml-4">
                    <p class="text-sm text-gray-500">Không hoạt động</p>
                    <p class="text-2xl font-bold">@(Model?.Count(x => !x.IsActive) ?? 0)</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Types Table -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tên thể loại</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mô tả</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Trạng thái</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ngày tạo</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Thao tác</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@item.ProductTypeId</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@item.TypeName</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.Description</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if (item.IsActive)
                                    {
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                                            Hoạt động
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800">
                                            Không hoạt động
                                        </span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <button class="text-blue-600 hover:text-blue-900" onclick="editSportType(@item.ProductTypeId)">
                                            <i data-lucide="edit" class="w-4 h-4"></i>
                                        </button>
                                        <button class="text-red-600 hover:text-red-900" onclick="deleteSportType(@item.ProductTypeId)">
                                            <i data-lucide="trash-2" class="w-4 h-4"></i>
                                        </button>
                                        <button class="text-yellow-600 hover:text-yellow-900" onclick="toggleSportTypeStatus(@item.ProductTypeId)">
                                            <i data-lucide="power" class="w-4 h-4"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">
                                Không có thể loại sản phẩm nào
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add/Edit Sport Type Modal -->
<div id="sportTypeModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900" id="modalTitle">Thêm thể loại mới</h3>
                <button onclick="closeSportTypeModal()" class="text-gray-400 hover:text-gray-600">
                    <i data-lucide="x" class="w-6 h-6"></i>
                </button>
            </div>
            
            <form id="sportTypeForm" class="space-y-4">
                <input type="hidden" id="productTypeId" name="ProductTypeId" value="0">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Tên thể loại *</label>
                    <input type="text" id="typeName" name="TypeName" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="VD: Đồ uống, Đồ ăn, Thể thao...">
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Mô tả</label>
                    <textarea id="description" name="Description" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="Mô tả chi tiết về thể loại..."></textarea>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Trạng thái</label>
                    <select id="isActive" name="IsActive" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500">
                        <option value="active">Hoạt động</option>
                        <option value="inactive">Không hoạt động</option>
                    </select>
                </div>
                
                <div class="flex justify-end space-x-3 pt-4">
                    <button type="button" onclick="closeSportTypeModal()" class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">
                        Hủy
                    </button>
                    <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">
                        Lưu thể loại
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize Lucide icons
        lucide.createIcons();
        
        let currentEditId = 0;
        
        // Sport type modal functions
        function openAddSportTypeModal() {
            currentEditId = 0;
            document.getElementById('modalTitle').textContent = 'Thêm thể loại mới';
            document.getElementById('productTypeId').value = '0';
            document.getElementById('sportTypeForm').reset();
            document.getElementById('sportTypeModal').classList.remove('hidden');
        }

        async function editSportType(id) {
            try {
                const response = await fetch(`/Admin/GetSportType?id=${id}`);
                const result = await response.json();
                
                if (result.success) {
                    currentEditId = id;
                    document.getElementById('modalTitle').textContent = 'Chỉnh sửa thể loại';
                    document.getElementById('productTypeId').value = result.data.productTypeId;
                    document.getElementById('typeName').value = result.data.typeName;
                    document.getElementById('description').value = result.data.description || '';
                    document.getElementById('isActive').value = result.data.isActive ? 'active' : 'inactive';
                    document.getElementById('sportTypeModal').classList.remove('hidden');
                } else {
                    alert('Lỗi: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi tải dữ liệu!');
            }
        }

        async function deleteSportType(id) {
            if (confirm('Bạn có chắc chắn muốn xóa thể loại này?')) {
                try {
                    const response = await fetch(`/Admin/DeleteSportType?id=${id}`, {
                        method: 'POST'
                    });
                    const result = await response.json();
                    
                    if (result.success) {
                        alert('Đã xóa thể loại thành công!');
                        location.reload();
                    } else {
                        alert('Lỗi: ' + result.message);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi xóa!');
                }
            }
        }

        async function toggleSportTypeStatus(id) {
            try {
                const response = await fetch(`/Admin/ToggleSportTypeStatus?id=${id}`, {
                    method: 'POST'
                });
                const result = await response.json();
                
                if (result.success) {
                    alert('Cập nhật trạng thái thành công!');
                    location.reload();
                } else {
                    alert('Lỗi: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi cập nhật trạng thái!');
            }
        }

        function closeSportTypeModal() {
            document.getElementById('sportTypeModal').classList.add('hidden');
            document.getElementById('sportTypeForm').reset();
            currentEditId = 0;
        }

        // Form submission
        document.getElementById('sportTypeForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const url = currentEditId > 0 ? `/Admin/UpdateSportType?id=${currentEditId}` : '/Admin/CreateSportType';
            
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    body: formData
                });
                const result = await response.json();
                
                if (result.success) {
                    alert('Lưu thể loại thành công!');
                    closeSportTypeModal();
                    location.reload();
                } else {
                    alert('Lỗi: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi lưu!');
            }
        });
    </script>
}
