@model IEnumerable<BookingSession>
@{
    ViewData["Title"] = "Quản lý Session";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="flex-1 overflow-y-auto p-6 bg-gray-50">
    <!-- Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">
            <i data-lucide="clock" class="w-8 h-8 inline mr-2"></i>Quản lý Session
        </h1>
        <p class="text-gray-600">Quản lý check-in/check-out và sản phẩm cho khách hàng</p>
    </div>

    <!-- Action Buttons -->
    <div class="mb-6 flex gap-4">
        <a asp-action="CheckIn" class="bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-lg transition">
            <i data-lucide="log-in" class="w-4 h-4 inline mr-2"></i>Check-in khách hàng
        </a>
        <a asp-action="Sessions" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition">
            <i data-lucide="list" class="w-4 h-4 inline mr-2"></i>Danh sách Session
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["Success"]</span>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
            <span class="block sm:inline">@TempData["Error"]</span>
        </div>
    }

    <!-- Sessions Table -->
    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-semibold text-gray-900">
                <i class="fas fa-list mr-2"></i>Danh sách Session
            </h3>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="hash" class="w-4 h-4 inline mr-1"></i>ID
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="user" class="w-4 h-4 inline mr-1"></i>Khách hàng
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="map-pin" class="w-4 h-4 inline mr-1"></i>Sân
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="log-in" class="w-4 h-4 inline mr-1"></i>Check-in
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="log-out" class="w-4 h-4 inline mr-1"></i>Check-out
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="tag" class="w-4 h-4 inline mr-1"></i>Trạng thái
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="dollar-sign" class="w-4 h-4 inline mr-1"></i>Tổng tiền
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <i data-lucide="settings" class="w-4 h-4 inline mr-1"></i>Thao tác
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var session in Model)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                    #@session.SessionId
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (session.Booking?.User != null)
                                    {
                                        <div>
                                            <div class="font-medium">@session.Booking.User.FirstName @session.Booking.User.LastName</div>
                                            <div class="text-gray-500">@session.Booking.User.PhoneNumber</div>
                                        </div>
                                    }
                                    else if (session.Booking != null)
                                    {
                                        <div>
                                            <div class="font-medium">@session.Booking.GuestName</div>
                                            <div class="text-gray-500">@session.Booking.GuestPhone</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">N/A</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (session.Booking?.Field != null)
                                    {
                                        <div>
                                            <div class="font-medium">@session.Booking.Field.FieldName</div>
                                            <div class="text-gray-500">@session.Booking.Field.FieldType?.TypeName</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">N/A</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (session.CheckInTime.HasValue)
                                    {
                                        <div>
                                            <div class="font-medium">@session.CheckInTime.Value.ToString("dd/MM/yyyy")</div>
                                            <div class="text-gray-500">@session.CheckInTime.Value.ToString("HH:mm")</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">Chưa check-in</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (session.CheckOutTime.HasValue)
                                    {
                                        <div>
                                            <div class="font-medium">@session.CheckOutTime.Value.ToString("dd/MM/yyyy")</div>
                                            <div class="text-gray-500">@session.CheckOutTime.Value.ToString("HH:mm")</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">Chưa check-out</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @{
                                        var statusClass = session.Status switch
                                        {
                                            "Active" => "bg-green-100 text-green-800",
                                            "Completed" => "bg-blue-100 text-blue-800",
                                            "Cancelled" => "bg-red-100 text-red-800",
                                            _ => "bg-gray-100 text-gray-800"
                                        };
                                        var statusText = session.Status switch
                                        {
                                            "Active" => "Đang hoạt động",
                                            "Completed" => "Hoàn thành",
                                            "Cancelled" => "Đã hủy",
                                            _ => session.Status
                                        };
                                    }
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full @statusClass">
                                        @statusText
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                    @(session.Booking?.TotalPrice.ToString("N0") ?? "0") VNĐ
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <button onclick="viewSessionDetails(@session.SessionId)" 
                                                class="text-blue-600 hover:text-blue-900 transition">
                                            <i data-lucide="eye" class="w-4 h-4"></i>
                                        </button>
                                        @if (session.Status == "Active")
                                        {
                                            <button onclick="checkOutSession(@session.SessionId)" 
                                                    class="text-orange-600 hover:text-orange-900 transition">
                                                <i data-lucide="log-out" class="w-4 h-4"></i>
                                            </button>
                                        }
                                        <button onclick="manageProducts(@session.SessionId)" 
                                                class="text-green-600 hover:text-green-900 transition">
                                            <i data-lucide="shopping-cart" class="w-4 h-4"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <i data-lucide="clock" class="w-16 h-16 text-gray-400 mx-auto mb-4"></i>
                <h3 class="text-lg font-medium text-gray-900 mb-2">Chưa có session nào</h3>
                <p class="text-gray-500">Bắt đầu bằng cách check-in khách hàng</p>
                <a asp-action="CheckIn" class="mt-4 inline-flex items-center px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-semibold rounded-lg transition">
                    <i data-lucide="log-in" class="w-4 h-4 mr-2"></i>Check-in ngay
                </a>
            </div>
        }
    </div>
</div>

<!-- Session Details Modal -->
<div id="sessionDetailsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">
                    <i data-lucide="info" class="w-5 h-5 inline mr-2"></i>Chi tiết Session
                </h3>
                <button onclick="closeSessionDetailsModal()" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600">
                    <i data-lucide="x" class="w-5 h-5"></i>
                </button>
            </div>
            <div id="sessionDetailsContent" class="p-6">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

<!-- Product Management Modal -->
<div id="productModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">
                    <i data-lucide="shopping-cart" class="w-5 h-5 inline mr-2"></i>Quản lý sản phẩm
                </h3>
                <button onclick="closeProductModal()" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600">
                    <i data-lucide="x" class="w-5 h-5"></i>
                </button>
            </div>
            <div id="productModalContent" class="p-6">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize Lucide icons
        if (typeof lucide !== 'undefined') {
            lucide.createIcons();
        }
    </script>
    <script>
        function viewSessionDetails(sessionId) {
            fetch(`/Admin/GetSessionDetails?sessionId=${sessionId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const session = data.session;
                        document.getElementById('sessionDetailsContent').innerHTML = `
                            <div class="space-y-6">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div class="bg-gray-50 p-4 rounded-lg">
                                        <h4 class="font-semibold text-gray-900 mb-2">Thông tin Session</h4>
                                        <p><strong>ID:</strong> #${session.sessionId}</p>
                                        <p><strong>Check-in:</strong> ${session.checkInTime || 'Chưa check-in'}</p>
                                        <p><strong>Check-out:</strong> ${session.checkOutTime || 'Chưa check-out'}</p>
                                        <p><strong>Trạng thái:</strong> ${session.status}</p>
                                        <p><strong>Tổng tiền:</strong> ${session.totalAmount.toLocaleString()} VNĐ</p>
                                    </div>
                                    <div class="bg-gray-50 p-4 rounded-lg">
                                        <h4 class="font-semibold text-gray-900 mb-2">Thông tin Booking</h4>
                                        ${session.booking ? `
                                            <p><strong>Mã booking:</strong> ${session.booking.bookingCode}</p>
                                            <p><strong>Khách hàng:</strong> ${session.booking.customerName}</p>
                                            <p><strong>Sân:</strong> ${session.booking.fieldName}</p>
                                        ` : '<p>Không có thông tin booking</p>'}
                                    </div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h4 class="font-semibold text-gray-900 mb-2">Sản phẩm đã mua</h4>
                                    ${session.orderItems && session.orderItems.length > 0 ? `
                                        <div class="overflow-x-auto">
                                            <table class="min-w-full divide-y divide-gray-200">
                                                <thead class="bg-gray-100">
                                                    <tr>
                                                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Sản phẩm</th>
                                                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Số lượng</th>
                                                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Đơn giá</th>
                                                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Thành tiền</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="divide-y divide-gray-200">
                                                    ${session.orderItems.map(item => `
                                                        <tr>
                                                            <td class="px-4 py-2 text-sm text-gray-900">${item.productName}</td>
                                                            <td class="px-4 py-2 text-sm text-gray-900">${item.quantity}</td>
                                                            <td class="px-4 py-2 text-sm text-gray-900">${item.unitPrice.toLocaleString()} VNĐ</td>
                                                            <td class="px-4 py-2 text-sm text-gray-900">${item.totalPrice.toLocaleString()} VNĐ</td>
                                                        </tr>
                                                    `).join('')}
                                                </tbody>
                                            </table>
                                        </div>
                                    ` : '<p class="text-gray-500">Chưa có sản phẩm nào</p>'}
                                </div>
                            </div>
                        `;
                        document.getElementById('sessionDetailsModal').classList.remove('hidden');
                    } else {
                        alert('Có lỗi xảy ra: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi tải thông tin session');
                });
        }

        function closeSessionDetailsModal() {
            document.getElementById('sessionDetailsModal').classList.add('hidden');
        }

        function checkOutSession(sessionId) {
            if (confirm('Bạn có chắc chắn muốn check-out session này?')) {
                fetch(`/Admin/CheckOut`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ sessionId: sessionId })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const contentType = response.headers.get('content-type');
                    if (!contentType || !contentType.includes('application/json')) {
                        throw new Error('Response is not JSON');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert('Check-out thành công!');
                        location.reload();
                    } else {
                        alert('Có lỗi xảy ra: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi check-out: ' + error.message);
                });
            }
        }

        function manageProducts(sessionId) {
            // Load products and current session products
            Promise.all([
                fetch('/Admin/GetAvailableProducts').then(r => r.json()),
                fetch(`/Admin/GetSessionDetails?sessionId=${sessionId}`).then(r => r.json())
            ])
            .then(([productsData, sessionData]) => {
                if (productsData.success && sessionData.success) {
                    const products = productsData.products;
                    const session = sessionData.session;
                    
                    document.getElementById('productModalContent').innerHTML = `
                        <div class="space-y-6">
                            <div class="bg-blue-50 p-4 rounded-lg">
                                <h4 class="font-semibold text-blue-900 mb-2">Session #${session.sessionId}</h4>
                                <p class="text-blue-800">${session.booking?.customerName || 'N/A'} - ${session.booking?.fieldName || 'N/A'}</p>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-3">Thêm sản phẩm</h4>
                                    <div class="space-y-3">
                                        <select id="productSelect" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                                            <option value="">Chọn sản phẩm</option>
                                            ${products.map(p => `<option value="${p.productId}" data-price="${p.price}">${p.productName} - ${p.price.toLocaleString()} VNĐ</option>`).join('')}
                                        </select>
                                        <input type="number" id="quantityInput" placeholder="Số lượng" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
                                        <button onclick="addProductToSession(${sessionId})" class="w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-lg transition">
                                            <i class="fas fa-plus mr-2"></i>Thêm sản phẩm
                                        </button>
                                    </div>
                                </div>
                                
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-3">Sản phẩm hiện tại</h4>
                                    <div id="currentProducts">
                                        ${session.orderItems && session.orderItems.length > 0 ? 
                                            session.orderItems.map(item => `
                                                <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg mb-2">
                                                    <div>
                                                        <div class="font-medium">${item.productName}</div>
                                                        <div class="text-sm text-gray-500">${item.quantity} x ${item.unitPrice.toLocaleString()} VNĐ</div>
                                                    </div>
                                                    <div class="flex items-center space-x-2">
                                                        <span class="font-semibold">${item.totalPrice.toLocaleString()} VNĐ</span>
                                                        <button onclick="removeProductFromSession(${item.orderItemId})" class="text-red-600 hover:text-red-800">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            `).join('') : 
                                            '<p class="text-gray-500">Chưa có sản phẩm nào</p>'
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    document.getElementById('productModal').classList.remove('hidden');
                } else {
                    alert('Có lỗi xảy ra khi tải dữ liệu');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi tải dữ liệu');
            });
        }

        function closeProductModal() {
            document.getElementById('productModal').classList.add('hidden');
        }

        function addProductToSession(sessionId) {
            const productSelect = document.getElementById('productSelect');
            const quantityInput = document.getElementById('quantityInput');
            
            if (!productSelect.value || !quantityInput.value) {
                alert('Vui lòng chọn sản phẩm và nhập số lượng');
                return;
            }
            
            fetch('/Admin/AddProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    sessionId: sessionId,
                    productId: parseInt(productSelect.value),
                    quantity: parseInt(quantityInput.value)
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const contentType = response.headers.get('content-type');
                if (!contentType || !contentType.includes('application/json')) {
                    throw new Error('Response is not JSON');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    alert('Thêm sản phẩm thành công!');
                    manageProducts(sessionId); // Reload modal
                } else {
                    alert('Có lỗi xảy ra: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi thêm sản phẩm: ' + error.message);
            });
        }

        function removeProductFromSession(orderItemId) {
            if (confirm('Bạn có chắc chắn muốn xóa sản phẩm này?')) {
                fetch('/Admin/RemoveProduct', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderItemId: orderItemId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Xóa sản phẩm thành công!');
                        location.reload(); // Reload page to update totals
                    } else {
                        alert('Có lỗi xảy ra: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi xóa sản phẩm');
                });
            }
        }
    </script>
}
