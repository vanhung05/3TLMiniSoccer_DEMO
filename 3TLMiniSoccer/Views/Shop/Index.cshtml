    @using _3TLMiniSoccer.ViewModels
@model ProductListViewModel
@{
    ViewData["Title"] = "Cửa hàng - 3TL Mini Soccer";
    ViewData["Description"] = "Trang bị đầy đủ từ giày, áo đến phụ kiện chất lượng cao cho đội bóng của bạn";
}

@section Styles {
    <style>
        /* Prevent horizontal scroll */
        html, body {
            overflow-x: hidden;
            max-width: 100%;
        }
        
        .hero-gradient {
            background: linear-gradient(135deg, #16a34a 0%, #15803d 50%, #166534 100%);
        }
        
        .card-hover {
            transition: all 0.3s ease;
        }
        
        .card-hover:hover {
            transform: translateY(-4px);
        }
        
        .placeholder-img {
            background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
            background-size: 200% 100%;
            animation: shimmer 2s infinite;
        }
        
        @@keyframes shimmer {
            0% { background-position: -200% 0; }
            100% { background-position: 200% 0; }
        }
        
        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .line-clamp-3 {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .price-old {
            text-decoration: line-through;
            opacity: 0.7;
        }
        
        .drawer {
            transition: transform 0.3s ease-in-out;
        }
        
        .drawer-open {
            transform: translateX(0);
        }
        
        .drawer-closed {
            transform: translateX(100%);
        }
        
        .modal {
            transition: all 0.3s ease;
        }
        
        .modal-open {
            opacity: 1;
            visibility: visible;
        }
        
        .modal-closed {
            opacity: 0;
            visibility: hidden;
        }
        
        /* Ensure containers don't overflow */
        .container {
            max-width: 100%;
            overflow-x: hidden;
        }
        
        /* Fix any potential overflow in grid layouts */
        .grid {
            max-width: 100%;
        }
        
        /* Ensure flex containers don't overflow */
        .flex {
            max-width: 100%;
        }
        
        /* Fix specific elements that might cause overflow */
        .flex-wrap {
            flex-wrap: wrap;
        }
        
        /* Ensure grid items don't overflow */
        .grid > * {
            max-width: 100%;
            overflow: hidden;
        }
        
        /* Fix any potential issues with sticky elements */
        .sticky {
            max-width: 100%;
        }
        
        /* Ensure images don't cause overflow */
        img {
            max-width: 100%;
            height: auto;
        }
        
        /* Additional overflow prevention */
        * {
            box-sizing: border-box;
        }
        
        /* Ensure all sections don't overflow */
        section {
            max-width: 100%;
            overflow-x: hidden;
        }
        
        /* Fix any potential issues with absolute positioning */
        .absolute {
            max-width: 100%;
        }
        
        /* Ensure responsive behavior */
        @@media (max-width: 768px) {
            .container {
                padding-left: 1rem;
                padding-right: 1rem;
            }
        }
    </style>
}

<!-- Hero Section -->
<section class="relative hero-gradient text-white">
    <div class="absolute inset-0 bg-black opacity-20"></div>
    <div class="container mx-auto px-4 py-20 md:py-28 relative z-10">
        <div class="max-w-4xl mx-auto text-center">
            <h1 class="text-4xl md:text-5xl font-bold mb-6" data-aos="fade-right">3TL Shop – đồ bóng đá mini cho đội & cá nhân</h1>
            <p class="text-lg md:text-xl mb-8" data-aos="fade-left" data-aos-delay="100">Trang bị đầy đủ từ giày, áo đến phụ kiện chất lượng cao cho đội bóng của bạn</p>
            <div class="flex flex-wrap justify-center gap-4" data-aos="zoom-in" data-aos-delay="200">
                <a href="#products" class="bg-accent hover:bg-yellow-600 text-white font-bold py-3 px-6 rounded-full transition">Mua ngay</a>
                <a href="#collections" class="bg-white hover:bg-gray-100 text-primary font-bold py-3 px-6 rounded-full transition">Xem bộ sưu tập</a>
            </div>
        </div>
    </div>
    
    <!-- Mini Stats -->
    <div class="container mx-auto px-4 relative z-10 -mt-8">
        <div class="bg-white rounded-xl shadow-lg p-6 grid grid-cols-2 md:grid-cols-4 gap-4" data-aos="flip-up">
            <div class="text-center">
                <div class="text-3xl font-bold text-primary">500+</div>
                <div class="text-gray-600">Sản phẩm</div>
            </div>
            <div class="text-center">
                <div class="text-3xl font-bold text-primary">50+</div>
                <div class="text-gray-600">Thương hiệu</div>
            </div>
            <div class="text-center">
                <div class="text-3xl font-bold text-primary">4.9★</div>
                <div class="text-gray-600">Đánh giá</div>
            </div>
            <div class="text-center">
                <div class="text-3xl font-bold text-primary">24/7</div>
                <div class="text-gray-600">Hỗ trợ</div>
            </div>
        </div>
    </div>
</section>

<!-- USP Section -->
<section class="py-12 bg-gray-50">
    <div class="container mx-auto px-4">
        <div class="text-center mb-12">
            <h2 class="text-3xl font-bold mb-4" data-aos="bounce-in">Vì sao mua tại 3TL?</h2>
            <p class="text-gray-600 max-w-2xl mx-auto" data-aos="fade-in" data-aos-delay="100">Chúng tôi tự hào mang đến những sản phẩm và dịch vụ tốt nhất cho cộng đồng yêu bóng đá</p>
        </div>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            <div class="bg-white rounded-xl shadow-md overflow-hidden card-hover" data-aos="slide-up" data-aos-delay="100">
                <div class="p-6">
                    <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-full flex items-center justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#16a34a" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                            <polyline points="22 4 12 14.01 9 11.01"></polyline>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Hàng chính hãng</h3>
                    <p class="text-gray-600">Cam kết 100% sản phẩm chính hãng từ các thương hiệu uy tín</p>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-md overflow-hidden card-hover" data-aos="slide-up" data-aos-delay="200">
                <div class="p-6">
                    <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-full flex items-center justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#16a34a" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="23 4 23 10 17 10"></polyline>
                            <polyline points="1 20 1 14 7 14"></polyline>
                            <path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"></path>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Đổi size trong 7 ngày</h3>
                    <p class="text-gray-600">Đổi size miễn phí trong vòng 7 ngày nếu không vừa ý</p>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-md overflow-hidden card-hover" data-aos="slide-up" data-aos-delay="300">
                <div class="p-6">
                    <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-full flex items-center justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#16a34a" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                            <circle cx="9" cy="7" r="4"></circle>
                            <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                            <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Combo đội giá tốt</h3>
                    <p class="text-gray-600">Giảm giá đặc biệt khi mua đồng phục cho cả đội</p>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-md overflow-hidden card-hover" data-aos="slide-up" data-aos-delay="400">
                <div class="p-6">
                    <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-full flex items-center justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#16a34a" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <rect x="1" y="3" width="15" height="13"></rect>
                            <polygon points="16 8 20 8 23 11 23 16 16 16"></polygon>
                            <circle cx="5.5" cy="18.5" r="2.5"></circle>
                            <circle cx="18.5" cy="18.5" r="2.5"></circle>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Giao nhanh nội thành</h3>
                    <p class="text-gray-600">Giao hàng trong ngày tại Hà Nội và TP.HCM</p>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-md overflow-hidden card-hover" data-aos="slide-up" data-aos-delay="500">
                <div class="p-6">
                    <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-full flex items-center justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#16a34a" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Bảo hành tiêu chuẩn</h3>
                    <p class="text-gray-600">Bảo hành 6 tháng cho tất cả sản phẩm</p>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-md overflow-hidden card-hover" data-aos="slide-up" data-aos-delay="600">
                <div class="p-6">
                    <div class="w-12 h-12 bg-primary bg-opacity-10 rounded-full flex items-center justify-center mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#16a34a" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Tư vấn chọn size/giày</h3>
                    <p class="text-gray-600">Hỗ trợ chọn size giày phù hợp với mặt sân thi đấu</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Collections Section -->
<section class="py-12 bg-white" id="collections">
    <div class="container mx-auto px-4">
        <div class="text-center mb-12">
            <h2 class="text-3xl font-bold mb-4" data-aos="bounce-in">Bộ sưu tập nổi bật</h2>
            <p class="text-gray-600 max-w-2xl mx-auto" data-aos="fade-in" data-aos-delay="100">Khám phá các bộ sưu tập sản phẩm được yêu thích nhất</p>
        </div>
        <div class="flex flex-wrap justify-center gap-4" data-aos="zoom-in" data-aos-delay="200">
            <a href="#" class="px-6 py-3 bg-gray-100 hover:bg-primary hover:text-white rounded-full shadow-sm transition font-medium">Áo đội</a>
            <a href="#" class="px-6 py-3 bg-gray-100 hover:bg-primary hover:text-white rounded-full shadow-sm transition font-medium">Giày 5-a-side</a>
            <a href="#" class="px-6 py-3 bg-gray-100 hover:bg-primary hover:text-white rounded-full shadow-sm transition font-medium">Bóng futsal</a>
            <a href="#" class="px-6 py-3 bg-gray-100 hover:bg-primary hover:text-white rounded-full shadow-sm transition font-medium">Bảo hộ</a>
            <a href="#" class="px-6 py-3 bg-gray-100 hover:bg-primary hover:text-white rounded-full shadow-sm transition font-medium">Phụ kiện</a>
            <a href="#" class="px-6 py-3 bg-gray-100 hover:bg-primary hover:text-white rounded-full shadow-sm transition font-medium">Tất bóng đá</a>
        </div>
    </div>
</section>

<!-- Main Content -->
<section class="py-12 bg-gray-50" id="products">
    <div class="container mx-auto px-4">
        <div class="flex flex-col md:flex-row gap-8">
            <!-- Filters Sidebar -->
            <aside class="w-full md:w-64 bg-white p-6 rounded-xl shadow-lg h-fit sticky top-24" data-aos="slide-right" data-aos-delay="100">
                <h3 class="font-bold text-lg mb-6">Bộ lọc</h3>
                
                <div class="mb-6">
                    <h4 class="font-medium mb-3">Danh mục</h4>
                    <div class="space-y-3">
                        @if (ViewBag.Categories != null)
                        {
                            @foreach (var category in ViewBag.Categories as List<string>)
                            {
                                <label class="flex items-center">
                                    <input type="checkbox" name="category" value="@category" class="mr-3 rounded border-gray-300 text-primary focus:ring-primary category-filter"> @category
                                </label>
                            }
                        }
                        else
                        {
                            <label class="flex items-center">
                                <input type="checkbox" class="mr-3 rounded border-gray-300 text-primary focus:ring-primary"> Áo
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" class="mr-3 rounded border-gray-300 text-primary focus:ring-primary"> Giày
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" class="mr-3 rounded border-gray-300 text-primary focus:ring-primary"> Bóng
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" class="mr-3 rounded border-gray-300 text-primary focus:ring-primary"> Bảo hộ
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" class="mr-3 rounded border-gray-300 text-primary focus:ring-primary"> Phụ kiện
                            </label>
                        }
                    </div>
                </div>
                
                <div class="mb-6">
                    <h4 class="font-medium mb-3">Size</h4>
                    <div class="flex flex-wrap gap-2">
                        <button class="px-3 py-2 bg-gray-100 rounded-lg hover:bg-primary hover:text-white transition font-medium">S</button>
                        <button class="px-3 py-2 bg-gray-100 rounded-lg hover:bg-primary hover:text-white transition font-medium">M</button>
                        <button class="px-3 py-2 bg-gray-100 rounded-lg hover:bg-primary hover:text-white transition font-medium">L</button>
                        <button class="px-3 py-2 bg-gray-100 rounded-lg hover:bg-primary hover:text-white transition font-medium">XL</button>
                        <button class="px-3 py-2 bg-gray-100 rounded-lg hover:bg-primary hover:text-white transition font-medium">XXL</button>
                    </div>
                </div>
                
                <div class="mb-6">
                    <h4 class="font-medium mb-3">Thương hiệu</h4>
                    <select class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary">
                        <option>Tất cả</option>
                        <option>Nike</option>
                        <option>Adidas</option>
                        <option>Puma</option>
                        <option>Mizuno</option>
                    </select>
                </div>
                
                <div class="mb-6">
                    <h4 class="font-medium mb-3">Khoảng giá</h4>
                    <input type="range" class="w-full mb-3" min="0" max="1000000" step="100000">
                    <div class="flex justify-between text-sm text-gray-600">
                        <span>100.000đ</span>
                        <span>1.000.000đ</span>
                    </div>
                </div>
                
                <div class="mb-6">
                    <label class="flex items-center">
                        <input type="checkbox" class="mr-3 rounded border-gray-300 text-primary focus:ring-primary"> Chỉ còn hàng
                    </label>
                </div>
                
                <button class="w-full bg-primary text-white py-3 rounded-lg hover:bg-green-700 transition font-medium apply-filter-btn">Áp dụng</button>
            </aside>

            <!-- Products Grid -->
            <div class="flex-1">
                <div class="flex justify-between items-center mb-8" data-aos="slide-left" data-aos-delay="200">
                    <h3 class="font-bold text-xl">Tất cả sản phẩm</h3>
                    <div>
                        <select class="p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary">
                            <option>Sắp xếp: Phổ biến</option>
                            <option>Mới nhất</option>
                            <option>Giá: Thấp đến cao</option>
                            <option>Giá: Cao đến thấp</option>
                        </select>
                    </div>
                </div>
                
                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                    @if (Model?.Products != null && Model.Products.Any())
                    {
                        @foreach (var product in Model.Products)
                        {
                            <div class="bg-white rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 card-hover" data-aos="zoom-in" data-aos-delay="100">
                                <div class="relative">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" alt="@product.ProductName" class="w-full h-48 object-cover">
                                    }
                                    else
                                    {
                                        <div class="h-48 placeholder-img"></div>
                                    }
                                    @if (product.CreatedAt > DateTime.Now.AddDays(-7))
                                    {
                                        <div class="absolute top-3 right-3">
                                            <span class="bg-red-500 text-white text-xs px-3 py-1 rounded-full font-medium">Mới</span>
                                        </div>
                                    }
                                </div>
                                <div class="p-6">
                                    <h4 class="font-bold text-lg mb-2 line-clamp-2">@product.ProductName</h4>
                                    <p class="text-sm text-gray-600 mb-2 line-clamp-2">@product.Category</p>
                                    @if (!string.IsNullOrEmpty(product.Description))
                                    {
                                        <p class="text-sm text-gray-500 mb-3 line-clamp-2">@product.Description</p>
                                    }
                                    <div class="flex items-center mb-4">
                                        <span class="font-bold text-primary text-lg">@product.Price.ToString("N0")đ</span>
                                    </div>
                                    <div class="flex gap-2">
                                        <a href="@Url.Action("Product", "Shop", new { id = product.ProductId })" class="flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-200 transition font-medium text-center">
                                            Xem chi tiết
                                        </a>
                                        <button class="flex-1 bg-primary text-white py-2 px-4 rounded-lg hover:bg-green-700 transition font-medium flex items-center justify-center add-to-cart-btn" data-product-id="@product.ProductId">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1">
                                                <circle cx="9" cy="21" r="1"></circle>
                                                <circle cx="20" cy="21" r="1"></circle>
                                                <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                                            </svg>
                                            Thêm
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-span-full text-center py-12">
                            <div class="text-gray-500 text-lg mb-4">Không có sản phẩm nào</div>
                            <p class="text-gray-400">Hãy thử thay đổi bộ lọc hoặc tìm kiếm khác</p>
                        </div>
                    }
                </div>
                
                <!-- Pagination -->
                @if (Model != null && Model.TotalCount > Model.PageSize)
                {
                    <div class="flex justify-center mt-8" data-aos="slide-up">
                        <nav class="inline-flex rounded-lg shadow-sm">
                            @{
                                var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
                                var currentPage = Model.PageNumber;
                                var startPage = Math.Max(1, currentPage - 2);
                                var endPage = Math.Min(totalPages, currentPage + 2);
                            }
                            
                            @if (currentPage > 1)
                            {
                                <a href="@Url.Action("Index", "Shop", new { pageNumber = currentPage - 1, pageSize = Model.PageSize, searchTerm = Model.Filter?.SearchTerm, category = Model.Filter?.Category })" 
                                   class="px-3 py-2 rounded-l-lg border border-gray-300 bg-white text-gray-500 hover:bg-gray-50 transition">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <polyline points="15 18 9 12 15 6"></polyline>
                                    </svg>
                                </a>
                            }
                            
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <a href="@Url.Action("Index", "Shop", new { pageNumber = i, pageSize = Model.PageSize, searchTerm = Model.Filter?.SearchTerm, category = Model.Filter?.Category })" 
                                   class="px-3 py-2 border-t border-b border-gray-300 @(i == currentPage ? "bg-primary text-white font-medium" : "bg-white text-gray-500 hover:bg-gray-50 transition")">
                                    @i
                                </a>
                            }
                            
                            @if (currentPage < totalPages)
                            {
                                <a href="@Url.Action("Index", "Shop", new { pageNumber = currentPage + 1, pageSize = Model.PageSize, searchTerm = Model.Filter?.SearchTerm, category = Model.Filter?.Category })" 
                                   class="px-3 py-2 rounded-r-lg border border-gray-300 bg-white text-gray-500 hover:bg-gray-50 transition">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <polyline points="9 18 15 12 9 6"></polyline>
                                    </svg>
                                </a>
                            }
                        </nav>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Html.AntiForgeryToken()
    <script>
        // Initialize AOS animation
        AOS.init({
            duration: 800,
            easing: 'ease-in-out',
            once: true
        });
        
        // Notification functions
        function showNotification(message, type = 'info') {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-lg shadow-lg text-white font-medium transform transition-all duration-300 ${
                type === 'success' ? 'bg-green-500' : 
                type === 'error' ? 'bg-red-500' : 
                'bg-blue-500'
            }`;
            notification.textContent = message;
            
            // Add to page
            document.body.appendChild(notification);
            
            // Animate in
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
            }, 100);
            
            // Remove after 3 seconds
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.parentNode.removeChild(notification);
                    }
                }, 300);
            }, 3000);
        }
        
        // Update cart count function
        async function updateCartCount() {
            try {
                // Fetch updated cart count from server
                const response = await fetch('/Cart/GetCartCount', {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                if (response.ok) {
                    const data = await response.json();
                    const cartCountElement = document.querySelector('.cart-count');
                    
                    if (data.count > 0) {
                        if (cartCountElement) {
                            cartCountElement.textContent = data.count;
                        } else {
                            // Create cart count element if it doesn't exist
                            const cartLink = document.querySelector('a[href*="/Cart"]');
                            if (cartLink) {
                                const cartIcon = cartLink.querySelector('svg').parentElement;
                                const badge = document.createElement('span');
                                badge.className = 'absolute -top-2 -right-2 bg-accent text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center cart-count';
                                badge.textContent = data.count;
                                cartIcon.appendChild(badge);
                            }
                        }
                        
                        // Visual feedback
                        if (cartCountElement) {
                            cartCountElement.style.transform = 'scale(1.2)';
                            setTimeout(() => {
                                cartCountElement.style.transform = 'scale(1)';
                            }, 200);
                        }
                    } else {
                        // Remove cart count if empty
                        const cartCountElement = document.querySelector('.cart-count');
                        if (cartCountElement) {
                            cartCountElement.remove();
                        }
                    }
                }
            } catch (error) {
                console.error('Error updating cart count:', error);
            }
        }
        
        // Cart functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Add to cart buttons
            const addToCartBtns = document.querySelectorAll('.add-to-cart-btn');
            
            addToCartBtns.forEach(button => {
                button.addEventListener('click', async (e) => {
                    e.preventDefault();
                    const productId = button.getAttribute('data-product-id');
                    if (productId) {
                        // Disable button to prevent multiple clicks
                        button.disabled = true;
                        button.innerHTML = '<svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Đang thêm...';
                        
                        try {
                            const response = await fetch('/Cart/AddToCart', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                    'X-Requested-With': 'XMLHttpRequest'
                                },
                                body: `productId=${productId}&quantity=1&__RequestVerificationToken=${document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''}`
                            });
                            
                            if (response.ok) {
                                const result = await response.json();
                                if (result.success) {
                                    showNotification(result.message, 'success');
                                    updateCartCount();
                                } else {
                                    showNotification(result.message, 'error');
                                }
                            } else {
                                throw new Error('Failed to add to cart');
                            }
                        } catch (error) {
                            console.error('Error adding to cart:', error);
                            showNotification('Có lỗi xảy ra khi thêm vào giỏ hàng!', 'error');
                        } finally {
                            // Re-enable button
                            button.disabled = false;
                            button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path></svg>Thêm';
                        }
                    }
                });
            });
            
            // Filter functionality
            const applyFilterBtn = document.querySelector('.apply-filter-btn');
            
            if (applyFilterBtn) {
                applyFilterBtn.addEventListener('click', () => {
                    applyFilters();
                });
            }
            
            // Category filter checkboxes
            const categoryFilters = document.querySelectorAll('.category-filter');
            categoryFilters.forEach(checkbox => {
                checkbox.addEventListener('change', () => {
                    applyFilters();
                });
            });
            
            // Price range slider
            const priceRange = document.querySelector('input[type="range"]');
            if (priceRange) {
                priceRange.addEventListener('input', (e) => {
                    const value = e.target.value;
                    // Update price display logic would go here
                    console.log('Price range:', value);
                });
            }
            
            function applyFilters() {
                const selectedCategories = Array.from(document.querySelectorAll('.category-filter:checked'))
                    .map(cb => cb.value);
                
                const url = new URL(window.location);
                
                // Clear existing filters
                url.searchParams.delete('category');
                url.searchParams.delete('pageNumber');
                
                // Add selected categories
                if (selectedCategories.length > 0) {
                    url.searchParams.set('category', selectedCategories[0]); // Take first selected category
                }
                
                // Redirect to filtered page
                window.location.href = url.toString();
            }
        });
    </script>
}
